# our CI/CD workflow .yaml file

name: CI/CD workflow

on: workflow_dispatch

jobs:
   integration:
      name: checks_and_tests
      runs-on: ubuntu-latest
      steps:
         - name: Checkout code repo
           # this action clones current repository to the VM where our job is running
           # https://github.com/actions/checkout
           uses: actions/checkout@v4
           
         - name: Setup uv
           run: curl -LsSf https://astral.sh/uv/install.sh | sh
           
         - name: Install dependencies
           run: uv sync --group integration
           
         - name: Run ruff check
           run: uv run ruff check
           
         - name: Run pip-audit
           run: uv run pip-audit --vulnerability-service pypi

         - name: Run PyTest
           run: uv run pytest tests
   deployment:
      name: onnx-model-pipeline # Meaningful name for the ONNX model processing job
      runs-on: ubuntu-latest     # Appropriate image for the job
      needs: integration         # Ensures this job runs only if 'integration' job succeeds
      steps:
         - name: Checkout code repo
           uses: actions/checkout@v4

         - name: Setup uv
           run: curl -LsSf https://astral.sh/uv/install.sh | sh

         - name: Install deployment dependencies
           # Installs only dependencies from the [tool.uv.sources.deployment] group in pyproject.toml
           run: uv sync --group deployment

         - name: Download model artifacts
         
           # Runs src/main.py --script download, as per lab instructions
           run: uv run python main.py --script download

         - name: Export model to ONNX

           # Runs main.py --script export, as per lab instructions
           run: uv run python main.py --script export

